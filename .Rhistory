]
con[,"Ozone"[good]]
good<-complete.cases(con)
con[good,][1:6,]
con[, "Ozone"[>31]]
con[, "Ozone"[con[, "Ozone"]>31]]
my_ozone<-con[, "Ozone"]
my_ozone[my_ozone > 31]
con[, "Ozone"[my_ozone > 31]]
con[, "Ozone",[my_ozone > 31]]
con[, "Ozone","Temp"]
con[, "Ozone"&"Temp"]
?max
newby<-data.frame(con[1:153, "Ozone"],con[1:153, "Temp",con[1:153, "Solar.R"]]
)
newby
newby<-data.frame(con[1:153, "Ozone"],con[1:153, "Temp",con[1:153, "Solar.R"]])
newby
newby<-matrix(con[1:153, "Ozone"],con[1:153, "Temp",con[1:153, "Solar.R"]])
con
con[, "Ozone"[31]]
con[2,]
con$Ozone
con["Ozone"]
con["Ozone"[2]]
con["Ozone"[2,2]]
con["Ozone"[[1]]]
con[1]
con
con[1[con[1]>31]]
con[1[con[1] > 31]]
m<-con[1]>31
m
con[1[m]]
con[,1[m]]
m<-con[1]>31&con["Temp"]>90
m
m<-con[2]&con[1]>31&con["Temp"]>90
m
mean(con[2]&con[1]>31&con["Temp"]>90, na.rm = TRUE)
con[con[2]&con[1]>31&con["Temp"]>90]
mean(con[con[2]&con[1]>31&con["Temp"]>90], na.rm = TRUE)
con[con[2]&con[1]>31&con["Temp"]>90]
con[con[1]>31&con["Temp"]>90]
con[con["Solar.R"]&con["Ozone"]>31&con["Temp"]>90]
mean(con[con["Solar.R"]&con["Ozone"]>31&con["Temp"]>90])
mean(con[con["Solar.R"]&con["Ozone"]>31&con["Temp"]>90], na.rm=TRUE)
con
m<-con[con["Ozone"]>31&con["Temp"]>90]
m
m<-con[con["Ozone"]>31
]
m
con[1]
con[1]>31
con[con[1]>31]
con[!is.na(con[1]>31)]
good<-complete.cases(con)
con[good, ]
View(my_matrix)
View(my_data)
View(newby)
View(con)
m<-con[con["Ozone">31], ]
m<-con[con[con["Ozone"]>31], ]
m
class(con)
?subset
v<-subset(con, Ozone>31, select = c(Ozone, Temp))
v
v<-subset(con, Ozone>31&Temp>90, select = c(Solar.R))
v
mean(v)
?mean
length(v)
dim(v)
mean(v[1])
mean(v[1:10])
mean(v[1:10,])
temp<-subset(con, Month == 6, select = c(Temp))
dim(temp)
mean(temp[1:30,])
temp<-subset(con, Month == 5, select = c(Temp))
dim(temp)
?max
ozone<-subset(con, Month == 5, select = c(ozone))
ozone<-subset(con, Month == 5, select = c(Ozone))
dim(ozone)
max(ozone[1:31,])
max(ozone[1:31,], na.rm = TRUE)
add2<- function (x,y) {}
View(add2)
View(add2)
}
x+y
add2 <- function (x,y){
x+y
}
add2 <- function (x,y){
print x+y
}
?print
add2 <- function (x,y){
print (x+y)
}
add2(5,7)
above10 <-function(x){
good<-x>10
print x[good]
}
above10 <-function(x){
good<-x>10
print (x[good])
}
above10(3,2,4,5,6,7,11,12,14,10,15)
above10(c(2,3,4,5,8,11,12,34,23))
columnmean <- function(x, removeNA = TRUE) {
nc <- ncol(x)
means <- numeric (nc)
for (i in 1:nc) {
means[i]<- mean(x[, i], na.rm = removeNA)
}
means
}
columnmean(con)
columnmean(con, FALSE)
args(columnmean)
args(lm)
clear()
cls
clear
swirl()
library(swirl)
ls
ls()
swirl()
T==T
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <=10
5 != 7
5 !=7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, TRUE, TRUE)
TRUE || c(TRUE, FALSE, FALSE)
5> 8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints<-sample(10)
ints
ints >5
whicH(7,)
which(ints, 7)
which(ints > 7)
any(ints <0)
all (ints >0)
swirl()
sys.date()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
info()
bye()
library(swirl)
swirl()
info()
skip()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){y<-length(x) x[y]},c(8,4,0))
evaluate(function(x){y<-length(x), x[y]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Hello there, I am a telegram")
skip()
mad_libs('Pluto', 'soft', 'pilot')
skip()
%p%("I", "love", "R!")
"%p%"("I", "love", "R!")
skip()
?read.ftable
read.table()
?read.table
data<- read.csv("001.csv")
data<- read.csv("001.csv")
data[1:3]
data[1:2]
data<- read.csv("001.csv", nrows=100)
print (data[1:3])
data<-read.csv("001.csv")
d<-data[1:3]
rm(d)
d<-data[,1:3]
x<-data[1:3,]
x
rm(d,x)
data[1:3,]
good<-complete.cases(data)
x<-data[good,]
x[1:5,]
mean(x[,3:4])
mean(x[,3])
mean(x[,4])
mean(x[,2])
?file
?file.path
file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata")
x<-file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata")
length(x)
ls(x)
?list.files
?ldply
y<-list.files(x)
y<-list.files(x,pattern = "csv", full.names = TRUE)
pollutantmean <-function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"),pollutant,id = 1:332)
{
setwd(file.path(getwd(), directory))
total <- 0
observations <- 0
for (i in id) {
if (i < 10) {
data<- read.csv(paste("0","0", as.character(i),".csv", sep=""), header = TRUE, na.strings = c("NA","NaN"," "))
}
else if (i>=10&i<100){data <- read.csv((paste("0", as.character(i), ".csv", sep=""), header=TRUE, na.strings=c("NA","NaN"," ")))}
else {data<- read.csv(paste(as.character(i),".csv", sep=""), header = TRUE, na.strings=c("NA","NaN"," "))}
}
data=na.omit(data)
observations = observations + nrow(data)
if(pollutant == "sulfate"){total = total+sum(data$sulfate)}
else{total = total+sum(data$nitrate)}
setwd("..")
return (total/observations)
}
pollutantmean <-function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"),pollutant,id = 1:332)
{
files = list.files(directory)
file.names = as.numeric(sub("\\.csv$","",filelist))
selected.files = filelist[match(id, file.names)]
Data = lapply(file.path(directory,selected.files),read.csv)
Data= do.call(rbind.data.frame,Data)
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("sulfate",1:10)
pollutantmean <-function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"),pollutant,id = 1:332)
{
filelist = list.files(directory)
file.names = as.numeric(sub("\\.csv$","",filelist))
selected.files = filelist[match(id, file.names)]
Data = lapply(file.path(directory,selected.files),read.csv)
Data= do.call(rbind.data.frame,Data)
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean("sulfate",1:10)
pollutantmean(,"sulfate",1:10)
pollutantmean(,"nitrate",1:10)
pollutantmean(,"nitrate",70:72)
pollutantmean(,"nitrate",23)
complete <- function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"), id = 1:332) {
nobsNum <- numeric(0)
for (cid in id) {
cDfr <- getmonitor(cid, directory)
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
data.frame(id = id, nobs = nobsNum)
}
complete(,1)
complete <- function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"), id = 1:332) {
nobsNum <- numeric(0)
for (cid in id) {
cDfr <- getmonitor(cid, directory)
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
data.frame(id = id, nobs = nobsNum)
}
getmonitor <- function(id, directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"), summarize = FALSE) {
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(id)), ".csv",
sep = "")
rawDfr <- read.csv(fileStr)
if (summarize) {
print(summary(rawDfr))
}
return(rawDfr)
}
complete(,1)
complete(, c(2, 4, 8, 10, 12))
pollutantmean <-function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"),pollutant,id = 1:332)
{
filelist = list.files(directory)
file.names = as.numeric(sub("\\.csv$","",filelist))
selected.files = filelist[match(id, file.names)]
Data = lapply(file.path(directory,selected.files),read.csv)
Data= do.call(rbind.data.frame,Data)
mean(Data[,pollutant],na.rm=TRUE)
}
complete <- function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"), id = 1:332) {
nobsNum <- numeric(0)
for (cid in id) {
cDfr <- getmonitor(cid, directory)
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
data.frame(id = id, nobs = nobsNum)
}
getmonitor <- function(id, directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"), summarize = FALSE) {
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(id)), ".csv",
sep = "")
rawDfr <- read.csv(fileStr)
if (summarize) {
print(summary(rawDfr))
}
return(rawDfr)
}
cr<-corr(,150)
corr <- function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"), threshold = 0) {
corrsNum <- numeric(0)
nobsDfr <- complete("specdata")
nobsDfr <- nobsDfr[nobsDfr$nobs > threshold, ]
for (cid in nobsDfr$id) {
monDfr <- getmonitor(cid, directory)
corrsNum <- c(corrsNum, cor(monDfr$sulfate, monDfr$nitrate, use = "pairwise.complete.obs"))
}
return(corrsNum)
}
complete <- function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"), id = 1:332) {
nobsNum <- numeric(0)
for (cid in id) {
cDfr <- getmonitor(cid, directory)
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
data.frame(id = id, nobs = nobsNum)
}
getmonitor <- function(id, directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"), summarize = FALSE) {
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(id)), ".csv",
sep = "")
rawDfr <- read.csv(fileStr)
if (summarize) {
print(summary(rawDfr))
}
return(rawDfr)
}
cr<-corr(,150)
corr <- function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera"), threshold = 0) {
corrsNum <- numeric(0)
nobsDfr <- complete("specdata")
nobsDfr <- nobsDfr[nobsDfr$nobs > threshold, ]
for (cid in nobsDfr$id) {
monDfr <- getmonitor(cid, directory)
corrsNum <- c(corrsNum, cor(monDfr$sulfate, monDfr$nitrate, use = "pairwise.complete.obs"))
}
return(corrsNum)
}
complete <- function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera"), id = 1:332) {
nobsNum <- numeric(0)
for (cid in id) {
cDfr <- getmonitor(cid, directory)
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
data.frame(id = id, nobs = nobsNum)
}
getmonitor <- function(id, directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera"), summarize = FALSE) {
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(id)), ".csv",
sep = "")
rawDfr <- read.csv(fileStr)
if (summarize) {
print(summary(rawDfr))
}
return(rawDfr)
}
cr<-corr(,150)
Init <- function(workDirStr = "C:/Users/user/Documents/GitHub/datasciencecoursera") {
setwd(workDirStr)
}
corr <- function(directory, threshold = 0) {
corrsNum <- numeric(0)
nobsDfr <- complete("specdata")
nobsDfr <- nobsDfr[nobsDfr$nobs > threshold, ]
for (cid in nobsDfr$id) {
monDfr <- getmonitor(cid, directory)
corrsNum <- c(corrsNum, cor(monDfr$sulfate, monDfr$nitrate, use = "pairwise.complete.obs"))
}
return(corrsNum)
}
complete <- function(directory, id = 1:332) {
nobsNum <- numeric(0)
for (cid in id) {
cDfr <- getmonitor(cid, directory)
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
data.frame(id = id, nobs = nobsNum)
}
getmonitor <- function(id, directory, summarize = FALSE) {
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(id)), ".csv",
sep = "")
rawDfr <- read.csv(fileStr)
if (summarize) {
print(summary(rawDfr))
}
return(rawDfr)
}
Init()
data<- corr("specdata", 150)
head(data)
summary(data)
data<-corr("specdata", 400)
head(data)
summary(data)
pollutantmean <-function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"),pollutant,id = 1:332)
{
filelist = list.files(directory)
file.names = as.numeric(sub("\\.csv$","",filelist))
selected.files = filelist[match(id, file.names)]
Data = lapply(file.path(directory,selected.files),read.csv)
Data= do.call(rbind.data.frame,Data)
mean(Data[,pollutant],na.rm=TRUE)
}
pollutantmean(, "sulfate", 1:10)
pollutantmean(, "nitrate", 70:72)
pollutantmean(, "sulfate", 34)
pollutantmean(, "nitrate")
complete <- function(directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"), id = 1:332) {
nobsNum <- numeric(0)
for (cid in id) {
cDfr <- getmonitor(cid, directory)
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
data.frame(id = id, nobs = nobsNum)
}
getmonitor <- function(id, directory = file.path("C:","Users","user","Documents","GitHub","datasciencecoursera","specdata"), summarize = FALSE) {
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(id)), ".csv",
sep = "")
rawDfr <- read.csv(fileStr)
if (summarize) {
print(summary(rawDfr))
}
return(rawDfr)
}
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
Init <- function(workDirStr = "C:/Users/user/Documents/GitHub/datasciencecoursera") {
setwd(workDirStr)
}
corr <- function(directory, threshold = 0) {
corrsNum <- numeric(0)
nobsDfr <- complete("specdata")
nobsDfr <- nobsDfr[nobsDfr$nobs > threshold, ]
for (cid in nobsDfr$id) {
monDfr <- getmonitor(cid, directory)
corrsNum <- c(corrsNum, cor(monDfr$sulfate, monDfr$nitrate, use = "pairwise.complete.obs"))
}
return(corrsNum)
}
complete <- function(directory, id = 1:332) {
nobsNum <- numeric(0)
for (cid in id) {
cDfr <- getmonitor(cid, directory)
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
data.frame(id = id, nobs = nobsNum)
}
getmonitor <- function(id, directory, summarize = FALSE) {
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(id)), ".csv",
sep = "")
rawDfr <- read.csv(fileStr)
if (summarize) {
print(summary(rawDfr))
}
return(rawDfr)
}
Init()
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
